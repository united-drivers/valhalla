// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tile.proto

/*
Package tile is a generated protocol buffer package.

It is generated from these files:
	tile.proto

It has these top-level messages:
	MarkedDeleted
	Tile
*/
package tile

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import opentraffic_osmlr "github.com/united-drivers/valhalla/pb/segment"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type MarkedDeleted struct {
	SegmentDeletedDate *uint32 `protobuf:"varint,1,opt,name=segment_deleted_date,json=segmentDeletedDate" json:"segment_deleted_date,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *MarkedDeleted) Reset()                    { *m = MarkedDeleted{} }
func (m *MarkedDeleted) String() string            { return proto.CompactTextString(m) }
func (*MarkedDeleted) ProtoMessage()               {}
func (*MarkedDeleted) Descriptor() ([]byte, []int) { return fileDescriptorTile, []int{0} }

func (m *MarkedDeleted) GetSegmentDeletedDate() uint32 {
	if m != nil && m.SegmentDeletedDate != nil {
		return *m.SegmentDeletedDate
	}
	return 0
}

type Tile struct {
	// a tile consists of a list of Entries.
	Entries []*Tile_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	// Creation date and time (UTC epoch seconds) for this OSMLR tile.
	CreationDate *uint32 `protobuf:"varint,2,opt,name=creation_date,json=creationDate" json:"creation_date,omitempty"`
	// Reference to the OSM changeset Id. While not an exact representation of
	// the state of the OSM planet file that OSMLR was derived from, this
	// provides context on age and provenance of tile data derived from OSM.
	ChangesetId *uint64 `protobuf:"varint,3,opt,name=changeset_id,json=changesetId" json:"changeset_id,omitempty"`
	// A string meant to describe this tile. It may be used to describe the geographic
	// extents of the tile but has no strict format. So as to remain projection
	// or really tiling system agnostic, its simple string which can be interpreted
	// differently depending on the tiling system used to generate and consume the tile
	Description      *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Tile) Reset()                    { *m = Tile{} }
func (m *Tile) String() string            { return proto.CompactTextString(m) }
func (*Tile) ProtoMessage()               {}
func (*Tile) Descriptor() ([]byte, []int) { return fileDescriptorTile, []int{1} }

func (m *Tile) GetEntries() []*Tile_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *Tile) GetCreationDate() uint32 {
	if m != nil && m.CreationDate != nil {
		return *m.CreationDate
	}
	return 0
}

func (m *Tile) GetChangesetId() uint64 {
	if m != nil && m.ChangesetId != nil {
		return *m.ChangesetId
	}
	return 0
}

func (m *Tile) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type Tile_Entry struct {
	// an entry in the tile should be _either_ a Segment _or_ a Marker. a tile
	// containing an Entry with both or neither is invalid.
	// Date is when the OSMLR segment was created (if segment exists) or the
	// date when the segment was deleted (if marker exists)
	Segment             *opentraffic_osmlr.Segment `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
	Marker              *MarkedDeleted             `protobuf:"bytes,2,opt,name=marker" json:"marker,omitempty"`
	SegmentCreationDate *uint32                    `protobuf:"varint,3,opt,name=segment_creation_date,json=segmentCreationDate" json:"segment_creation_date,omitempty"`
	XXX_unrecognized    []byte                     `json:"-"`
}

func (m *Tile_Entry) Reset()                    { *m = Tile_Entry{} }
func (m *Tile_Entry) String() string            { return proto.CompactTextString(m) }
func (*Tile_Entry) ProtoMessage()               {}
func (*Tile_Entry) Descriptor() ([]byte, []int) { return fileDescriptorTile, []int{1, 0} }

func (m *Tile_Entry) GetSegment() *opentraffic_osmlr.Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

func (m *Tile_Entry) GetMarker() *MarkedDeleted {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *Tile_Entry) GetSegmentCreationDate() uint32 {
	if m != nil && m.SegmentCreationDate != nil {
		return *m.SegmentCreationDate
	}
	return 0
}

func init() {
	proto.RegisterType((*MarkedDeleted)(nil), "opentraffic.osmlr.MarkedDeleted")
	proto.RegisterType((*Tile)(nil), "opentraffic.osmlr.Tile")
	proto.RegisterType((*Tile_Entry)(nil), "opentraffic.osmlr.Tile.Entry")
}

func init() { proto.RegisterFile("tile.proto", fileDescriptorTile) }

var fileDescriptorTile = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x49, 0xdb, 0xf7, 0x2d, 0x4e, 0x9a, 0x83, 0xab, 0x42, 0x28, 0x08, 0xb1, 0x5e, 0x82,
	0x68, 0x22, 0x41, 0xd0, 0xab, 0x5a, 0x0f, 0x1e, 0xbc, 0x44, 0x4f, 0x5e, 0xca, 0x36, 0x3b, 0x6d,
	0x17, 0x37, 0x7f, 0xd8, 0x4c, 0x0b, 0x7e, 0x26, 0x3f, 0x90, 0x5f, 0x47, 0x36, 0xd9, 0x48, 0x8b,
	0xbd, 0x3e, 0xfb, 0x1b, 0x7e, 0xf3, 0xcc, 0x02, 0x90, 0x54, 0x18, 0x55, 0xba, 0xa4, 0x92, 0x1d,
	0x96, 0x15, 0x16, 0xa4, 0xf9, 0x62, 0x21, 0xb3, 0xa8, 0xac, 0x73, 0xa5, 0xc7, 0x5e, 0x8d, 0xcb,
	0x1c, 0x0b, 0x6a, 0x89, 0xc9, 0x3d, 0x78, 0x2f, 0x5c, 0x7f, 0xa0, 0x98, 0xa2, 0x42, 0x42, 0xc1,
	0xae, 0xe1, 0xd8, 0x12, 0x33, 0xd1, 0x46, 0x33, 0xc1, 0x09, 0x7d, 0x27, 0x70, 0x42, 0x2f, 0x65,
	0xf6, 0xcd, 0xd2, 0x53, 0x4e, 0x38, 0xf9, 0xee, 0xc1, 0xe0, 0x4d, 0x2a, 0x64, 0xb7, 0x30, 0x34,
	0x36, 0x89, 0xb5, 0xef, 0x04, 0xfd, 0xd0, 0x4d, 0x4e, 0xa3, 0x3f, 0xfe, 0xc8, 0x90, 0xd1, 0x53,
	0x41, 0xfa, 0x33, 0xed, 0x68, 0x76, 0x0e, 0x5e, 0xa6, 0x91, 0x93, 0x2c, 0x8b, 0x56, 0xd6, 0x6b,
	0x64, 0xa3, 0x2e, 0x34, 0x1a, 0x76, 0x06, 0xa3, 0x6c, 0xc5, 0x8b, 0x25, 0xd6, 0x48, 0x33, 0x29,
	0xfc, 0x7e, 0xe0, 0x84, 0x83, 0xd4, 0xfd, 0xcd, 0x9e, 0x05, 0x0b, 0xc0, 0x15, 0x58, 0x67, 0x5a,
	0x56, 0x66, 0xca, 0x1f, 0x04, 0x4e, 0x78, 0x90, 0x6e, 0x47, 0xe3, 0x2f, 0x07, 0xfe, 0x35, 0x72,
	0x76, 0x03, 0x43, 0xdb, 0xa5, 0xa9, 0xe6, 0x26, 0xe3, 0x3d, 0xcb, 0xbe, 0xb6, 0x44, 0xda, 0xa1,
	0xec, 0x0e, 0xfe, 0xe7, 0xe6, 0x5c, 0xba, 0x59, 0xd1, 0x4d, 0x82, 0x3d, 0x43, 0x3b, 0xf7, 0x4c,
	0x2d, 0xcf, 0x12, 0x38, 0xe9, 0xee, 0xba, 0xdb, 0xb5, 0xdf, 0x74, 0x3d, 0xb2, 0x8f, 0x8f, 0x5b,
	0x95, 0x1f, 0x2e, 0xdf, 0x2f, 0x96, 0x92, 0x56, 0xeb, 0x79, 0x94, 0x95, 0x79, 0xbc, 0x2e, 0x24,
	0xa1, 0xb8, 0x12, 0x5a, 0x6e, 0x50, 0xd7, 0xf1, 0x86, 0xab, 0x15, 0x57, 0x8a, 0xc7, 0xd5, 0x3c,
	0x36, 0x5f, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xff, 0x11, 0xc9, 0xf9, 0x01, 0x00, 0x00,
}
